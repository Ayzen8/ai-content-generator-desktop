{
  "summary": {
    "total_tests": 46,
    "passed": 46,
    "failed": 0,
    "success_rate": "100.00",
    "duration_ms": 3551,
    "duration_formatted": "3s"
  },
  "results": {
    "unit": {
      "passed": 12,
      "failed": 0,
      "total": 12,
      "exitCode": 0,
      "output": "\n\n  Content Generation Service\n    generateContent()\n      âœ” should generate content with all required fields\n      âœ” should handle invalid niche ID\n      âœ” should validate content quality\n      âœ” should handle AI service errors gracefully\n    calculateQualityScore()\n      âœ” should calculate quality score based on content metrics\n      âœ” should penalize low-quality content\n      âœ” should reward comprehensive hashtags\n    Performance Tests\n      âœ” should generate content within acceptable time limits\n      âœ” should handle concurrent content generation\n    Memory Usage Tests\n      âœ” should not cause memory leaks during content generation\n    Data Validation Tests\n      âœ” should validate generated content structure\n      âœ” should handle malformed AI responses\n\n\n  12 passing (60ms)\n\n"
    },
    "integration": {
      "passed": 29,
      "failed": 0,
      "total": 29,
      "exitCode": 0,
      "output": "\n\n  API Endpoints Integration Tests\n    Content Generation Endpoints\n      POST /api/content/generate\n        âœ” should generate content successfully\n        âœ” should return 400 for missing parameters\n        âœ” should return 404 for invalid niche ID\n      GET /api/content/history\n        âœ” should return content history\n        âœ” should support pagination\n      GET /api/content/stats\n        âœ” should return content statistics\n    Niche Management Endpoints\n      GET /api/niches\n        âœ” should return list of niches\n      POST /api/niches\n        âœ” should create a new niche\n        âœ” should return 400 for invalid niche data\n      GET /api/niches/stats\n        âœ” should return niche statistics\n    Analytics Endpoints\n      GET /api/analytics/dashboard\n        âœ” should return analytics dashboard data\n      GET /api/analytics/content/:id\n        âœ” should return analytics for specific content\n        âœ” should return 404 for non-existent content\n    Performance Endpoints\n      GET /api/performance/dashboard\n        âœ” should return performance dashboard data\n      POST /api/performance/cache/clear\n        âœ” should clear cache successfully\n      GET /api/cache/stats\n        âœ” should return cache statistics\n      POST /api/cache/invalidate\n        âœ” should invalidate cache by tags\n        âœ” should return 400 for missing tags\n    Database Optimization Endpoints\n      GET /api/database/statistics\n        âœ” should return database statistics\n      POST /api/database/optimize\n        âœ” should perform database vacuum\n        âœ” should perform database analysis\n        âœ” should return 400 for invalid operation\n      GET /api/database/optimization-suggestions\n        âœ” should return optimization suggestions\n    Error Handling\n      âœ” should handle 404 for non-existent endpoints\n      âœ” should handle malformed JSON requests\n      âœ” should include error tracking headers\n    Rate Limiting\n      âœ” should handle multiple concurrent requests\n    Response Time Performance\n      âœ” should respond to simple GET requests quickly\n      âœ” should handle database queries efficiently\n\n\n  29 passing (181ms)\n\n"
    },
    "e2e": {
      "passed": 5,
      "failed": 0,
      "total": 5,
      "exitCode": 0,
      "output": "\n\n  End-to-End User Workflows\n    Complete Content Creation Workflow\nStep 1: Creating new niche...\nâœ… Niche created with ID: 2\nStep 2: Verifying niche in list...\nâœ… Niche verified in list\nStep 3: Generating content...\nâœ… Content generated successfully\nStep 4: Verifying content in history...\nâœ… Content verified in history\nStep 5: Checking analytics...\nâœ… Analytics updated\nStep 6: Verifying niche statistics...\nâœ… Niche statistics updated\nðŸŽ‰ Complete content creation workflow successful!\n      âœ” should complete the full content creation process (548ms)\n    Performance Monitoring Workflow\nStep 1: Checking initial performance...\nâœ… Initial performance metrics retrieved\nStep 2: Generating load for cache testing...\nâœ… Load generated\nStep 3: Checking cache performance...\nâœ… Cache hit rate: 80.0%\nStep 4: Testing cache invalidation...\nâœ… Cache invalidation successful\nStep 5: Checking database optimization...\nâœ… Database statistics retrieved\nStep 6: Running database optimization...\nâœ… Database optimization completed\nðŸŽ‰ Performance monitoring workflow successful!\n      âœ” should monitor and optimize performance\n    Analytics and Insights Workflow\nStep 1: Getting dashboard analytics...\nâœ… Dashboard analytics retrieved\nStep 2: Getting advanced analytics...\nâœ… Advanced analytics checked\nStep 3: Getting content trends...\nâœ… Content trends retrieved\nStep 4: Getting optimization suggestions...\nâœ… Optimization suggestions retrieved\nðŸŽ‰ Analytics and insights workflow successful!\n      âœ” should provide comprehensive analytics insights\n    Error Recovery Workflow\nStep 1: Testing invalid niche ID handling...\nâœ… Invalid niche ID handled correctly\nStep 2: Testing malformed request handling...\nâœ… Malformed request handled correctly\nStep 3: Testing non-existent endpoint...\nâœ… Non-existent endpoint handled correctly\nStep 4: Verifying system functionality after errors...\nâœ… System remains functional after errors\nðŸŽ‰ Error recovery workflow successful!\n      âœ” should handle and recover from errors gracefully\n    Data Consistency Workflow\nStep 1: Getting initial counts...\nInitial niches: 2, content: 1\nStep 2: Creating niche and content...\nStep 3: Verifying counts increased...\nâœ… Data consistency maintained\nStep 4: Verifying statistics consistency...\nâœ… Statistics consistency verified\nðŸŽ‰ Data consistency workflow successful!\n      âœ” should maintain data consistency across operations (530ms)\n\n\n  5 passing (2s)\n\n"
    }
  },
  "timestamp": "2025-06-21T11:43:13.778Z",
  "environment": {
    "node_version": "v22.16.0",
    "platform": "win32",
    "memory_usage": {
      "rss": 42999808,
      "heapTotal": 7139328,
      "heapUsed": 5164496,
      "external": 1764448,
      "arrayBuffers": 15142
    }
  }
}